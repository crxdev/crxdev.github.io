{"version":3,"sources":["crx/portfolio/ui/style/lib.cljs"],"mappings":"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","names":["var_args","G__42833","crx.portfolio.ui.style.lib/->html-safe","args-arr__4885__auto__","len__4864__auto__","i__4865__auto__","argseq__4886__auto__","cljs.core/IndexedSeq","seq42830","G__42831","cljs.core/first","cljs.core/next","G__42832","self__4851__auto__","x","clojure.string/replace","x1","x2","xs","cljs.core.into","cljs.core/PersistentVector","cljs.core.comp","cljs.core.remove","cljs.core/nil?","cljs.core.map","clojure.string.join","crx.portfolio.ui.style.lib/-classes-mapper","cls","cljs.core/map?","p__42845","vec__42849","cljs.core.nth","k","v","args__4870__auto__","argseq__4871__auto__","crx.portfolio.ui.style.lib/classes","seq42852","self__4852__auto__","cljs.core/seq","classnames","cljs.core.mapcat","crx.portfolio.ui.style.lib/opacity","o","ie8","ie5","garden.stylesheet.at_supports","p__42858","vec__42859","crx.portfolio.ui.style.lib/-transition-prop","cljs.core/name","crx.portfolio.ui.style.lib/transition","transitions"],"sourcesContent":["(ns crx.portfolio.ui.style.lib\n  (:require\n   [clojure.string :as string]\n   [garden.stylesheet :as g.stylesheet]))\n\n  ;; TODO: macro hypotheses\n(defn ->html-safe\n  ([x] (when x (string/replace (str x) #\"\\W\" \"-\")))\n  ([x1 x2 & xs]\n   (->>\n    (into (vector x1 x2) xs)\n    (into (vector) (comp (remove nil?) (map ->html-safe)))\n    (string/join \" \"))))\n\n(defn -classes-mapper\n  [cls]\n  (if (map? cls)\n    (map (fn [[k v]] (when v k)) cls)\n    [cls]))\n\n(defn classes\n  [& classnames]\n  (->>\n   (mapcat -classes-mapper classnames)\n   (remove nil?)\n   (map ->html-safe)))\n\n(defn opacity\n  [o]\n  (let [ie8 (str \"progid:DXImageTransform.Microsoft.Alpha(Opacity=\" o \")\")\n        ie5 (str \"alpha(opacity=\" o \")\")]\n    [[:& {:opacity o}]\n     [(g.stylesheet/at-supports {:-ms-filter ie8} {:-ms-filter ie8})]\n     [(g.stylesheet/at-supports {:filter ie5} {:filter ie5})]]))\n\n(defn -transition-prop\n  [[k v]]\n  (str (name k) \" \" v))\n\n(defn transition\n  [transitions]\n  [[:& {:transition\n        (->> transitions\n             (map -transition-prop)\n             (string/join \", \"))}]])\n"]}