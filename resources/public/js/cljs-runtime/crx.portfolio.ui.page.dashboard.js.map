{"version":3,"sources":["crx/portfolio/ui/page/dashboard.cljs"],"mappings":"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","names":["crx.portfolio.ui.style.proto/->styles","_props","crx.portfolio.ui.page.dashboard/projects","crx.portfolio.ui.component.link/component","crx.portfolio.ui.page.dashboard/render-card-link","index","link-props","p__35783","map__35784","cljs.core/--destructure-map","cljs.core.get","crx.portfolio.ui.page.dashboard/render-card","image","title","description","video","links","crx.portfolio.ui.style.lib.classes","img","first-link-props","cljs.core/first","cljs.core.into","cljs.core/seq","cljs.core.doall","cljs.core.map_indexed","crx.portfolio.ui.page.dashboard/nav-links","crx.portfolio.ui.router/path-for","crx.portfolio.ui.page.dashboard/render","props","crx.portfolio.ui.component.layout.holy-grail/component","cljs.core.assoc","crx.portfolio.ui.page.proto/component"],"sourcesContent":["(ns crx.portfolio.ui.page.dashboard\n  (:require\n   [crx.portfolio.ui.component.layout.holy-grail :as layout]\n   [crx.portfolio.ui.component.link :as link]\n   [crx.portfolio.ui.page.proto :as page.proto]\n   [crx.portfolio.ui.router :as router]\n   [crx.portfolio.ui.style.lib :as style.lib]\n   [crx.portfolio.ui.style.proto :as style.proto]\n   [reagent.core]))\n\n(defmethod style.proto/->styles ::styles\n  [_props]\n  [[::card-image {:width \"100%\"}]\n   [:ui.grid.card/links {:list-style-type :none\n                         :margin          0\n                         :padding         0}\n    [:li {:line-height \"3ch\"}]]])\n\n(def projects\n  [{:title       \"NuID Docs, SDKs\"\n    :image       \"img/portfolio/nuid-portal.png\"\n    :description [[:p \"During the pandemic I rewrote \"\n                   [link/component {:href \"https://portal.nuid.io/docs\" :text \"NuID's developer portal\" :target \"_blank\"}]\n                   \" along with all of the documentation for how to intereact\n                     with the NuID ecosystem. I also ended up writing SDKs (essentially API\n                     wrappers) for Clojure, Ruby, Go, and Node.js.\"]]\n    :links       [{:href \"https://portal.nuid.io/docs\" :icon [:fas :book-open] :text \"NuID Developer Portal\" :target \"_blank\"}\n                  {:href \"https://github.com/orgs/NuID/repositories?q=sdk&type=all&language=&sort=\" :icon [:fas :code] :text \"Source for SDKs\" :target \"_blank\"}]}\n   {:title       \"Elm Mastermind\"\n    :image       \"img/portfolio/mastermind.png\"\n    :description [[:p \"The game Mastermind (guess the color combination), written in elm.\"]]\n    :links       [{:href \"https://elm-mastermind.netlify.app/\" :icon [:fas :gamepad] :text \"Play\" :target \"_blank\"}\n                  {:href \"https://github.com/localshred/elm-mastermind\" :icon [:fas :code] :text \"Source\" :target \"_blank\"}]}\n   {:title       \"Elm Games\"\n    :image       \"img/portfolio/minesweeper.png\"\n    :description [[:p \"Minesweeper and Tic-Tac-Toe, written in elm.\"]]\n    :links       [{:href \"https://localshred.github.io/elm-games/\" :icon [:fas :gamepad] :text \"Play\" :target \"_blank\"}\n                  {:href \"https://github.com/localshred/elm-games\" :icon [:fas :code] :text \"Source\" :target \"_blank\"}]}\n   {:title       \"Game of Life\"\n    :video       \"https://www.youtube-nocookie.com/embed/IqkOy55iFUA\"\n    :description [[:p \"Game of life written in Clojure and Ruby, circa 2015.\"]]\n    :links       [{:href   \"https://www.youtube.com/watch?v=IqkOy55iFUA\"\n                   :icon   [:fab :youtube]\n                   :text   \"Watch on Youtube\"\n                   :target \"_blank\"}\n                  {:href   \"https://github.com/localshred/game_of_life/tree/main/clojure\"\n                   :icon   [:fas :code]\n                   :text   \"Clojure Source\"\n                   :target \"_blank\"}\n                  {:href   \"https://github.com/localshred/game_of_life/tree/main/ruby\"\n                   :icon   [:fas :code]\n                   :text   \"Ruby Source\"\n                   :target \"_blank\"}]}])\n(defn render-card-link\n  [index link-props]\n  [:li {:key index} [link/component link-props]])\n\n(defn render-card\n  [index {:keys [image title description video links]}]\n  [:div {:key   index\n         :class (style.lib/classes :ui.grid/card)}\n   [:h4 {:class (style.lib/classes :ui.grid.card/title)} title]\n   (when image\n     (let [img              [:img {:class (style.lib/classes :ui.grid.card/hero ::card-image)\n                                   :src   image}]\n           first-link-props (first links)]\n       (if first-link-props\n         [:a first-link-props img]\n         img)))\n   (when video\n     [:iframe\n      {:class           (style.lib/classes :ui.grid.card/hero)\n       :width           \"100%\"\n       :frameborder     0\n       :src             video\n       :title           \"YouTube video player\"\n       :allow           \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n       :allowFullScreen :allowFullScreen}])\n\n   (into [:div {:class (style.lib/classes :ui.grid.card/description)}] description)\n   (when (seq links)\n     [:ul {:class (style.lib/classes :ui.grid.card/links)}\n      (doall (map-indexed render-card-link links))])])\n\n(def nav-links\n  [{:href (router/path-for ::router/portfolio) :icon [:fas :palette] :text \"portfolio\"}\n   {:href \"https://github.com/crxdev\" :icon [:fab :github] :text \"crxdev\"}\n   {:href \"https://github.com/localshred\" :icon [:fab :github] :text \"localshred\"}])\n\n(defn render\n  [props]\n  [:p \"HI from render\"]\n  [layout/component\n   (assoc props :nav-links nav-links)\n   [:div {:class (style.lib/classes :ui/grid :ui/grid3)}\n    (doall (map-indexed render-card projects))]])\n\n(defmethod page.proto/component ::router/portfolio\n  [props]\n  [render props])\n"]}